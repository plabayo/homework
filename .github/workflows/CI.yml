name: CI

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: stable
  RUST_TOOLCHAIN_NIGHTLY: nightly
  RUST_TOOLCHAIN_MSRV: 1.88.0
  RUST_TOOLCHAIN_BETA: beta

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          env-vars: "RUST_TOOLCHAIN=${{env.RUST_TOOLCHAIN}}"
      - name: check
        run: |
          cargo check --all-targets --all-features
      - name: clippy
        run: |
          cargo clippy --all-targets --all-features
      - name: rustfmt
        run: |
          cargo fmt --all --check

  test:
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
        with:
          env-vars: "RUST_TOOLCHAIN=${{env.RUST_TOOLCHAIN}}"
      - name: Run tests
        run: cargo test --all-features

  dependencies-are-sorted:
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{env.RUST_TOOLCHAIN}}
      - uses: Swatinem/rust-cache@v2
        with:
          env-vars: "RUST_TOOLCHAIN=${{env.RUST_TOOLCHAIN}}"
      - name: Install cargo-sort
        run: |
          cargo install cargo-sort 2>/dev/null || true
      - name: Check dependency tables
        working-directory: .
        run: |
          cargo sort --grouped --check

  deploy-fly:
    runs-on: ubuntu-latest
    needs:
      - test
      - dependencies-are-sorted
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
